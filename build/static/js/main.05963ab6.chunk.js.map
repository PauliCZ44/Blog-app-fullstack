{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/BlogForm.js","services/blogs.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/AboutUsers.js","services/login.js","services/register.js","components/Footer.js","services/users.js","App.js","index.js"],"names":["LoginForm","props","className","type","value","username","id","placeholder","onChange","target","setUsername","password","setPassword","onClick","handleLogin","switchToRegister","RegistrationForm","useState","isNotFilled","setIsNotFilled","styleFilledUser","styleFilledName","styleFilledPass","styleFilledPassConf","registerUser","e","a","preventDefault","makeMessage","name","passwordConfirm","userObject","registerService","res","setName","setPasswordConfirm","console","log","BlogForm","blogServiceCreate","blogServiceGetOne","toggleAddNewBlog","setBlogs","blogs","title","setTitle","author","setAuthor","url","setUrl","styleFilledT","styleFilledA","styleFilledU","handleAddBlog","blogObject","newBlog","user","concat","onSubmit","htmlFor","baseUrl","token","create","blogToBeSaved","config","headers","Authorization","axios","post","response","data","deleteBlog","blogToBeDeleted","delete","getAll","get","then","setToken","newToken","put","blogToBePutted","getOne","blogToBeFound","Blog","blog","blogServiceUpdate","showDetails","setShowDetails","likes","setLikes","likeIsDisabled","setLikeIsDiabled","handleDeleteBlog","blogToDelete","window","confirm","blogService","filter","sendPut","blogToPut","allBlogs","setTimeout","href","disabled","size","Notification","classStyle","message","error","screen","style","color","borderLeft","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","AboutUsers","usersToRender","registeredUsers","map","key","length","filteredUsersToRender","stats","mostLikesUser","mostLikes","mostLikesNumberOfBlogs","Math","round","mostLikedBlogLikes","mostLikedBlogTitle","mostlikedBlogUser","mostBlogs","Author","login","credentials","register","userData","Footer","App","setUser","setMessage","messageIsError","setMessageIsError","addNewVisible","setAddNewVisible","registration","setRegistration","setRegisteredUsers","setStats","useEffect","userService","users","loggedUserJSON","localStorage","getItem","JSON","parse","messageRec","msgExisted","event","loginService","loggedUser","setItem","stringify","catch","err","authorWithMostLikes","authorsAndLikes","forEach","findIndex","el","push","numberOfBlogs","index","auth","maxLikes","max","b","i","favoriteBlog","result","mostLikesRes","favoriteBlogRes","mostBlogsRes","authors","bestAuthor","maxBlogs","handleCreateAccount","removeItem","sort","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05963ab6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  return (\r\n    <div className=\"card px-sm-4 mt-2 login-card hv-center shadow\">\r\n      <form className=\"p-2\">\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Username</label>\r\n          <input type=\"text\"\r\n            value={props.username}\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            placeholder=\"Enter your user name\"\r\n            onChange={({ target }) => props.setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Password</label>\r\n          <input type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={props.password}\r\n            onChange={({ target }) => props.setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-dark my-3 px-5 submitBtn\"\r\n          onClick={props.handleLogin}\r\n        >\r\n          Login\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.switchToRegister}\r\n          className=\"btn btn-info my-3 px-4 submitBtn float-right\">\r\n           Create Account\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginForm","import React,  { useState }  from 'react'\r\n\r\nconst RegistrationForm = (props) => {\r\n  /* VALIDATOIN */\r\n  const [isNotFilled, setIsNotFilled] = useState([false, false, false, false])\r\n\r\n  let styleFilledUser = isNotFilled[0]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledName = isNotFilled[1]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledPass = isNotFilled[2]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledPassConf = isNotFilled[3]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault()\r\n    if (props.username === '') {\r\n      props.makeMessage('Please fill in your username', true)\r\n      return setIsNotFilled([true, false, false, false])\r\n    }\r\n    else if (props.name === '') {\r\n      props.makeMessage('Please fill in your full name', true)\r\n      return setIsNotFilled([false, true, false, false])\r\n    }\r\n    else if (props.password === '') {\r\n      props.makeMessage('Please fill in your password', true)\r\n      return setIsNotFilled([false, false, true, false])\r\n    }\r\n    else if (props.passwordConfirm === '') {\r\n      props.makeMessage('Please fill in your password for confirmation', true)\r\n      return setIsNotFilled([false, false, false, true])\r\n    }\r\n    else if (props.passwordConfirm !== props.password) {\r\n      props.makeMessage('Passwords had to be equal', true)\r\n      return setIsNotFilled([false, false, true, true])\r\n    }\r\n    /* VALIDATOIN  END*/\r\n    const userObject = {\r\n      username: props.username,\r\n      name: props.name,\r\n      password: props.password,\r\n    }\r\n    try {\r\n      let res = await props.registerService(userObject)\r\n      if (res) {\r\n        props.makeMessage(`${props.name}, you were registed in as \"${props.username}\"`)\r\n        props.setUsername('')\r\n        props.setName('')\r\n        props.setPassword('')\r\n        props.setPasswordConfirm('')\r\n        setIsNotFilled([false, false, false, false])\r\n        console.log('response after create:', res)\r\n      }\r\n    } catch (error) {\r\n      props.makeMessage('ERROR - Could not register', true)\r\n      console.log('error::', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-sm-4 mt-2 login-card hv-center shadow\">\r\n      <form className=\"p-2\">\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Username for login</label>\r\n          <input type=\"text\"\r\n            value={props.username}\r\n            className={styleFilledUser}\r\n            id=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            onChange={({ target }) => props.setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Name</label>\r\n          <input type=\"text\"\r\n            value={props.name}\r\n            className={styleFilledName}\r\n            id=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={({ target }) => props.setName(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Password</label>\r\n          <input type=\"password\"\r\n            className={styleFilledPass}\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={props.password}\r\n            onChange={({ target }) => props.setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Confirm your password</label>\r\n          <input type=\"password\"\r\n            className={styleFilledPassConf}\r\n            id=\"passwordConfirm\"\r\n            placeholder=\"Confirm your password\"\r\n            value={props.passwordConfirm}\r\n            onChange={({ target }) => props.setPasswordConfirm(target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-block btn-dark my-5 px-5 py-3 submitBtn\"\r\n          onClick = { registerUser } >\r\n          CREATE NEW ACCOUNT\r\n        </button>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <p className = 'my-2'> Already have an account?</p>\r\n          <button\r\n            className = \"btn btn-info my-2 px-5 save-btn\"\r\n            type = \"button\"\r\n            onClick={props.switchToRegister} >\r\n            Log in here\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default RegistrationForm","import React, { useState } from 'react'\r\n\r\n\r\nconst BlogForm = ({ makeMessage, blogServiceCreate, blogServiceGetOne, toggleAddNewBlog, setBlogs, blogs, username }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [isNotFilled, setIsNotFilled] = useState([false, false, false])\r\n\r\n  let styleFilledT = isNotFilled[0]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledA = isNotFilled[1]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledU = isNotFilled[2]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n\r\n  const handleAddBlog = async (e) => {\r\n    e.preventDefault()\r\n    if (title === '') {\r\n      makeMessage('Please fill in the Title', true)\r\n      setIsNotFilled([true, false, false])\r\n      return\r\n    } else if (author === '') {\r\n      makeMessage('Please fill in the Author', true)\r\n      setIsNotFilled([false, true, false])\r\n      return\r\n    } else if (url === '') {\r\n      makeMessage('Please fill in the URL', true)\r\n      setIsNotFilled([false, false, true])\r\n      return\r\n    }\r\n\r\n    let blogObject = {\r\n      title,\r\n      author,\r\n      url,\r\n    }\r\n    //console.log(blogObject)\r\n    try {\r\n\r\n      let res = await blogServiceCreate(blogObject)\r\n      if (res) {\r\n        makeMessage(`Blog \"${title}\" was added`)\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n        setIsNotFilled(false, false, false)\r\n        toggleAddNewBlog()\r\n        //console.log('response after create:', res)\r\n        let newBlog = await blogServiceGetOne(res)\r\n        console.log('NewBlog', newBlog)\r\n        delete newBlog.user\r\n        newBlog.user = { username: username }\r\n        setBlogs(blogs.concat(newBlog))\r\n      }\r\n    } catch (error) {\r\n      makeMessage('ERROR - Blog was not added', true)\r\n      console.log('error::', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-3 mt-2 mb-5 addBlog-card hv-center shadow-lg addBlog-panel\">\r\n      <h3 className=\"text-center py-3\">Add blog:</h3>\r\n      <form onSubmit={handleAddBlog}>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputTitle\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold pl-sm-4\"\r\n          >\r\n            Title*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledT}\r\n              id=\"inputTitle\"\r\n              placeholder=\"Enter title\"\r\n              value={title}\r\n              onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputAuthor\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold  pl-sm-4\"\r\n          >\r\n            Author*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledA}\r\n              id=\"inputAuthor\"\r\n              placeholder=\"Enter author\"\r\n              value={author}\r\n              onChange={({ target }) => setAuthor(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputURL\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold  pl-sm-4\"\r\n          >\r\n            URL*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledU}\r\n              id=\"inputURL\"\r\n              placeholder=\"Enter URL\"\r\n              value={url}\r\n              onChange={({ target }) => setUrl(target.value)}\r\n            />\r\n            <small id=\"help\" className=\"form-text text-muted\">\r\n              * must be provided\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-info px-5 save-btn mr-4 mb-2\"\r\n              onClick={handleAddBlog}\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger px-5 cancel-btn mb-2 \"\r\n              onClick={toggleAddNewBlog}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n// eslint-disable-next-line\r\nlet token = null\r\n\r\nfunction setToken(newToken) {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (blogToBeSaved) => {\r\n  console.log('token:', token)\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios.post(baseUrl, blogToBeSaved, config)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (blogToBeDeleted) => {\r\n  console.log('token:', token)\r\n  const config = { headers: { Authorization: token } }\r\n  let url = baseUrl+'/'+blogToBeDeleted.id\r\n  const response = await axios.delete(url, config)\r\n  return response.data\r\n}\r\n\r\nconst put = async (blogToBePutted) => {\r\n  let url = baseUrl+'/'+blogToBePutted.id\r\n  console.log(url)\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios.put(url, blogToBePutted, config)\r\n  console.log('Put METHDON, data:', response.data)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (blogToBeFound) => {\r\n  let url = baseUrl+'/'+blogToBeFound.id\r\n  const response = await axios.get(url)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, setToken, create, put , deleteBlog, getOne }","import React, { useState } from 'react'\r\nimport blogService from '../services/blogs'\r\nimport PropTypes from 'prop-types'\r\n//icons\r\nimport { HandThumbsUp } from 'react-bootstrap-icons'\r\n\r\nconst Blog = ({ blog, blogs, setBlogs, makeMessage, user, blogServiceUpdate }) => {\r\n\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [likes, setLikes] = useState(blog.likes)\r\n  const [likeIsDisabled, setLikeIsDiabled] = useState(false)\r\n  const toggleShowDetails = () => {\r\n    setShowDetails(!showDetails)\r\n    console.log('toggle details')\r\n  }\r\n\r\n  const handleDeleteBlog = async (e) => {\r\n    console.log('deleting blog')\r\n    e.preventDefault()\r\n    let blogToDelete = blog\r\n    if (window.confirm(`Do you really want to delete \"${blogToDelete.title}\" from your phonebook?`)) {\r\n      await blogService.deleteBlog(blogToDelete)\r\n      setBlogs(blogs.filter(blog => blog.id !== blogToDelete.id)) //filter blogs\r\n      makeMessage('Blog was deleted!')\r\n    } else {\r\n      makeMessage('Blog was not deleted', true)\r\n    }\r\n  }\r\n\r\n  const sendPut = async (e) => {\r\n    e.preventDefault()\r\n    //setLikeIsDiabled(true)  //this will break the test for likes\r\n    let blogToPut = {\r\n      id: blog.id,\r\n      user: blog.user,\r\n      author: blog.author,\r\n      likes: likes + 1,\r\n      title: blog.title,\r\n      url: blog.url\r\n    }\r\n    await blogServiceUpdate(blogToPut)\r\n    console.log('like given')\r\n    setLikes(likes + 1)\r\n    setLikeIsDiabled(true)\r\n\r\n    let allBlogs = await blogService.getAll()\r\n    setBlogs(allBlogs)\r\n\r\n    setTimeout(() => {\r\n      setLikeIsDiabled(false)\r\n    }, 3000)                           // =========  LIKE SPAM PROTECTION  ==============\r\n    //let res = await blogService.put(blogToPut)   // ->> moved to app.js\r\n  }\r\n\r\n  const details = () => (\r\n    <div className = 't_detailsDiv'>\r\n      <p className='mb-1'>URL: <a href={blog.url}>{blog.url}</a></p>\r\n      <p className='mb-1 t_likesCount'>Likes: {likes}\r\n        <button\r\n          onClick={sendPut}\r\n          className=\"btn btn-sm btn-secondary py-0 px-3 ml-4 font-weight-bold t_LikeBtn\"\r\n          disabled={likeIsDisabled}>\r\n          Like\r\n          < HandThumbsUp size={18} className='ml-1  font-weight-bold'/>\r\n        </button>\r\n      </p>\r\n      <p className='mb-1'>User: {blog.user.username}</p>\r\n      { blog.user.username === user.username || typeof blog.user  === 'string'  //pokud je přihlášený uživatel stejný jako uživatel co vytvořil blog\r\n        ? <button\r\n          className='btn btn-sm btn-danger px-2 px-sm-4 py-1'\r\n          onClick={handleDeleteBlog}>\r\n          DELETE\r\n        </button>\r\n        : <p>You can not delete this blog. This was created by {blog.user.username}</p>\r\n      }\r\n    </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <div className=\"border-left border-top  bg-white rounded my-4 blogHeader\">\r\n      <div className=\"bigLeftBorder border-dark ml-0 pl-2 py-2\">\r\n        <div className='d-flex'>\r\n          <h5 className='py-1 mb-2'>{blog.title} <span className='text-muted'> by {blog.author} </span></h5>\r\n          <button\r\n            className='btn btn-sm btn-info px-2 px-sm-4 py-1 ml-auto mr-1 mr-sm-3 align-self-center t_DetailsBtn'\r\n            onClick={toggleShowDetails}>\r\n            {showDetails ? 'Hide details' :  'Show details'}\r\n          </button>\r\n        </div>\r\n\r\n        {showDetails ? details() : null}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  blogs: PropTypes.array,\r\n  setBlogs:PropTypes.func,\r\n  makeMessage: PropTypes.func,\r\n  user: PropTypes.object,\r\n}\r\n\r\n/* TEST BUTTONS\r\n      <p>User</p>\r\n      <button onClick = {()=> console.log(user)}>User: </button>\r\n      <p>Blog:</p>\r\n      <button onClick = {()=> console.log(blog)}>BLOG</button>\r\n*/\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, error, screen }) => {\r\n  const succesStyle = {\r\n    color: 'green',\r\n    borderLeft: 'solid 3px #008000bb',\r\n  }\r\n  const errorStyle = {\r\n    color: 'red',\r\n    borderLeft: 'solid 3px #FF0000bb',\r\n  }\r\n\r\n\r\n  let classStyle\r\n  if (screen === 'login') {\r\n    classStyle = 'login-notif'\r\n  } else {\r\n    classStyle = 'add-blog-notif'\r\n  }\r\n\r\n\r\n  if (message === null) {\r\n    return null\r\n  } else  {\r\n    return (\r\n      <div className= {classStyle} style={error ? errorStyle : succesStyle }>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility} className='btn btn-md btn-light btn-block py-2 px-3 border border-dark logout-btn'>Show {props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        <button onClick={toggleVisibility} className='btn btn-light py-2 px-3 btn-block logout-btn'>Hide {props.buttonLabel}</button>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Togglable\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\n\r\nimport Togglable from './Togglable'\r\n\r\nconst AboutUsers = (props) => {\r\n\r\n\r\n  let usersToRender = props.registeredUsers.map( user =>\r\n    <li key={user.id}> {user.username } ({user.blogs.length} blogs) </li>)\r\n\r\n  let filteredUsersToRender = props.registeredUsers.filter( user => user.blogs.length !== 0).map( user =>\r\n    <li key={user.id}> {user.username } ({user.blogs.length} blogs) </li>)\r\n  //console.log('Author com, stats::', props.stats)\r\n  return (\r\n    <div className='container grid-stats-area mt-3'>\r\n      <div className=  'grid-stats-a'>\r\n        <Togglable buttonLabel=\"Info about registered users and blogs:\">\r\n          <ul className = 'mt-2'>\r\n            {usersToRender}\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n      <div className=  'grid-stats-b'>\r\n        <Togglable buttonLabel=\"Users with at least one blog:\">\r\n          <ul className = 'mt-2'>\r\n            {filteredUsersToRender}\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n      <div className=  'grid-stats-c'>\r\n        <Togglable buttonLabel=\"additional info:\">\r\n          <h5 className = 'mt-2'>Author with most likes is:</h5>\r\n          <ul>\r\n            <li><strong>{props.stats.mostLikesUser}</strong> with {props.stats.mostLikes} likes total, on his/her <em>{props.stats.mostLikesNumberOfBlogs}</em> blogs.\r\n           That is, on average { (Math.round(props.stats.mostLikedBlogLikes / props.stats.mostLikesNumberOfBlogs * 1000))/1000} likes per blog.</li>\r\n          </ul>\r\n          <h5>The most liked blog is:</h5>\r\n          <ul>\r\n            <li><strong>&quot;{props.stats.mostLikedBlogTitle}&quot;</strong> <em>by {props.stats.mostlikedBlogUser}</em> with {props.stats.mostLikedBlogLikes} likes.</li>\r\n          </ul>\r\n          <h5>Author with most blogs is:</h5>\r\n          <ul>\r\n            <li><strong>&quot;{props.stats.mostBlogs.Author}&quot;</strong> with totaly <em>{props.stats.mostBlogs.blogs}</em> blogs.\r\n           On all of his blogs he has <em>{props.stats.mostBlogs.likes}</em> likes.\r\n           That is, on average { (Math.round(props.stats.mostBlogs.likes / props.stats.mostBlogs.blogs * 1000))/1000} likes per blog.</li>\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutUsers","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials)\r\n  console.log(res)\r\n  return res.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = async (userData) => {\r\n  const res = await axios.post(baseUrl, userData)\r\n  console.log(res)\r\n  return res.data\r\n}\r\n\r\nexport default { register }","import React  from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n\r\n    <footer className=\"footer-copyright page-footer\">\r\n      <div className=\"container text-center\">\r\n        <div className=\"\">\r\n            © 2020 Pavel Šťastný   <a id=\"info\"  className=\"footerText\" href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\">If you find a bug, please contact me.</a>\r\n          <a href=\"https://www.linkedin.com/in/pavel-stastny-155539150\" target=\"blank\" className=\"footerText right\">LinkedIn</a>\r\n          <a href=\"https://www.freecodecamp.org/paulicz44\" target=\"blank\" className=\"footerText right\">FCC profile </a>\r\n          <a href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\" target=\"blank\" className=\"footerText right\">My Github</a>\r\n          <br/>\r\n\r\n        </div>\r\n      </div>\r\n    </footer>\r\n\r\n  )\r\n}\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst getAllUsers = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAllUsers}","import React, { useState, useEffect } from 'react'\r\nimport LoginForm from './components/LoginForm'\r\nimport RegistrationForm from './components/RegistrationForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport AboutUsers from './components/AboutUsers'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport registerService from './services/register'\r\nimport Footer from './components/Footer'\r\nimport userService from './services/users'\r\n//import userService from '../services/users'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')   //states for user management\r\n  const [user, setUser] = useState(null)\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirm, setPasswordConfirm] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [messageIsError, setMessageIsError] = useState(false)\r\n  const [addNewVisible, setAddNewVisible] = useState(false)\r\n  const [registration, setRegistration] = useState(false)\r\n  const [registeredUsers, setRegisteredUsers] = useState([])\r\n  const [stats, setStats] = useState({\r\n    mostLikes: 0,\r\n    mostLikesUser: '',\r\n    mostLikedBlogTitle: '',\r\n    mostlikedBlogUser: '',\r\n    mostLikedBlogLikes: 0,\r\n    mostBlogs: '',\r\n    mostLikesNumberOfBlogs: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    userService.getAllUsers().then( users =>\r\n      setRegisteredUsers(users))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      console.log('Local storage', user.token)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n    else {\r\n      console.log('Local storage empty, you have to login')\r\n    }\r\n  }, [])\r\n\r\n  const toggleAddNewBlog = () => {\r\n    setAddNewVisible(!addNewVisible)\r\n    console.log(addNewVisible)\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const hideWhenVisible = { display: addNewVisible ? 'none' : '' }\r\n  const showWhenVisible = { display: addNewVisible ? '' : 'none' }\r\n\r\n  const makeMessage = (messageRec, error) => {\r\n    let msgExisted\r\n    if (message) {\r\n      msgExisted = true\r\n    } else {\r\n      msgExisted = false\r\n    }\r\n\r\n    if (error) { setMessageIsError(true) }\r\n    setMessage(messageRec)\r\n    if(msgExisted){\r\n      setTimeout(() => {\r\n        if (error) { setMessageIsError(true) }\r\n        setMessage(messageRec)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n          setMessageIsError(false)\r\n        }, 3000)\r\n      }, 3300)\r\n    }\r\n    setTimeout(() => {\r\n      if (!msgExisted) {\r\n        setMessage(null)\r\n        setMessageIsError(false)\r\n      }\r\n    }, 3000)\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const loggedUser = await loginService.login({ username, password, })\r\n      blogService.setToken(loggedUser.token)  //setting token for user\r\n      setUser(loggedUser)\r\n      setUsername('')\r\n      setPassword('')\r\n      makeMessage('You were logged in')\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(loggedUser))\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      makeMessage('Wrong credentials', true)\r\n    }\r\n  }\r\n\r\n  const switchToRegister = (event) => {\r\n    event.preventDefault()\r\n    setPassword('')\r\n    setRegistration(!registration)\r\n  }\r\n\r\n  const handleCreateAccount = (event) => {\r\n    event.preventDefault()\r\n    console.log('Try to create an account')\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    console.log('logging out')\r\n    setUser(null)\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    makeMessage('You were logged out', true)\r\n  }\r\n\r\n  const blogServiceUpdate = (blog) => {\r\n    blogService.put(blog)\r\n      .then(() => {\r\n        makeMessage(`you liked \"${blog.title}\" by ${blog.author}`)\r\n      })\r\n      .catch(err => {\r\n        setMessage('error updating likes', true)\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  /*============= STATISTICS FUNCTIONS =============*/\r\n\r\n  const mostLikes = (blogs) => {\r\n    let authorWithMostLikes = {}\r\n    let authorsAndLikes = []\r\n    blogs.forEach(blog => {    //make array of authors and number of blogs\r\n      if (authorsAndLikes.findIndex(el => el.Author === blog.author) === -1) {  //if author is not found, push it to the array\r\n        authorsAndLikes.push({ Author: blog.author, likes: blog.likes, numberOfBlogs: 1 })\r\n      } else {\r\n        // increase number of blogs\r\n        let index = authorsAndLikes.findIndex(auth => auth.Author === blog.author)\r\n        authorsAndLikes[index].likes += blog.likes\r\n        authorsAndLikes[index].numberOfBlogs ++\r\n      }\r\n    })\r\n    let maxLikes = Math.max(...authorsAndLikes.map(b => b.likes), 0)  //find max number of blogs\r\n    authorsAndLikes.forEach( () => {\r\n      let i = authorsAndLikes.findIndex(el => el.likes === maxLikes)\r\n      if (i > -1) {\r\n        authorWithMostLikes = authorsAndLikes[i]\r\n      }\r\n    })\r\n    //console.log('bestOne:', authorWithMostLikes)\r\n    return authorWithMostLikes\r\n  }\r\n\r\n  const favoriteBlog = (blogs) => {\r\n    let result = {\r\n      title: '',\r\n      author: '',\r\n      likes: 0\r\n    }\r\n    blogs.forEach(blog => {\r\n      if (blog.likes > result.likes) {\r\n        result = {\r\n          title: blog.title,\r\n          author: blog.author,\r\n          likes: blog.likes\r\n        }\r\n      }\r\n    })\r\n    return result\r\n  }\r\n\r\n  const mostBlogs = (blogs) => {\r\n    // vytvořit array of objects s autory a počtem blogů\r\n    let authors = []\r\n    let bestAuthor = {}\r\n\r\n    blogs.forEach(blog => {    //make array of authors and number of blogs\r\n      if (authors.findIndex(el => el.Author === blog.author) === -1) {  //if author is not found, push it to the array\r\n        authors.push({ Author: blog.author, blogs: 1, likes: blog.likes })\r\n      } else {\r\n        // increase number of blogs\r\n        let index = authors.findIndex(auth => auth.Author === blog.author)\r\n        authors[index].blogs ++\r\n        authors[index].likes += blog.likes\r\n      }\r\n    })\r\n    let maxBlogs = Math.max(...authors.map(b => b.blogs), 0)  //find max number of blogs\r\n    authors.forEach( () => {\r\n      let i = authors.findIndex(el => el.blogs === maxBlogs)\r\n      if (i > -1) {\r\n        bestAuthor = authors[i]\r\n      }\r\n    })\r\n    console.log('BestAUth', bestAuthor)\r\n    return bestAuthor\r\n  }\r\n  useEffect(() => {\r\n    let mostLikesRes = mostLikes(blogs)\r\n    let favoriteBlogRes = favoriteBlog(blogs)\r\n    let mostBlogsRes = mostBlogs(blogs)\r\n    setStats({\r\n      mostLikes: mostLikesRes.likes,\r\n      mostLikesUser: mostLikesRes.Author,\r\n      mostLikesNumberOfBlogs: mostLikesRes.numberOfBlogs,\r\n      mostLikedBlogTitle: favoriteBlogRes.title,\r\n      mostlikedBlogUser: favoriteBlogRes.author,\r\n      mostLikedBlogLikes: favoriteBlogRes.likes,\r\n      mostBlogs: mostBlogsRes\r\n    })\r\n  }, [blogs])\r\n\r\n\r\n  /*============ STATISTICS FUNCTIONS END =============*/\r\n\r\n  // LOGIN CASE //\r\n  if (user === null && registration === false) {\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <h1 className='text-center my-5'>BLOGS APP</h1>\r\n          <h5 className='text-center m-4'>Log in to application please</h5>\r\n          <div className='wrapNotif'>\r\n            <Notification message= { message } error = { messageIsError } screen = { 'login' } />\r\n          </div>\r\n          <LoginForm\r\n            handleLogin = { handleLogin }\r\n            username = { username }\r\n            setUsername = { setUsername }\r\n            password = { password }\r\n            setPassword = { setPassword }\r\n            switchToRegister = {switchToRegister}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // REGISTRTION CASE //\r\n  if (user === null && registration === true ) {\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <h1 className='text-center my-5'>BLOGS APP</h1>\r\n          <h5 className='text-center m-4'>Register to application</h5>\r\n          <div className='wrapNotif'>\r\n            <Notification message={message} error={messageIsError} screen={'login'} />\r\n          </div>\r\n          <RegistrationForm\r\n            username = { username }\r\n            setUsername = { setUsername }\r\n            password = { password }\r\n            setPassword = { setPassword }\r\n            passwordConfirm = { passwordConfirm }\r\n            setName = { setName }\r\n            name = { name }\r\n            setPasswordConfirm = { setPasswordConfirm }\r\n            handleCreateAccount = { handleCreateAccount }\r\n            switchToRegister = { switchToRegister }\r\n            makeMessage = { makeMessage }\r\n            registerService = { registerService.register }\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <header className='bg-black pt-5 pb-2 mb-5'>\r\n        <h1 className='text-center text-light'>BLOGS APP</h1>\r\n        <div className='container'>\r\n          <p className='text-right text-white-50'>Logged as {user.username}. Welcome back!\r\n            <button\r\n              onClick={handleLogout}\r\n              className='btn btn-dark btn-sm px-4 ml-4 logout-btn'>\r\n              Log Out\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </header>\r\n      <section className='container appWrapper'>\r\n        <div className='wrapNotif'>\r\n          <Notification message={message} error={messageIsError} screen={'blogList'} />\r\n        </div>\r\n        <button\r\n          onClick={toggleAddNewBlog}\r\n          className='btn btn-block btn-dark addBlog-card p-3 my-3 mb-5 addBlog-Btn'\r\n          /*</div>{/* style={hideWhenVisible}}*/\r\n        >\r\n          CREATE A NEW BLOG\r\n        </button>\r\n        <div style={showWhenVisible}>\r\n          <BlogForm\r\n            setBlogs={setBlogs}\r\n            blogs={blogs}\r\n            makeMessage={makeMessage}\r\n            toggleAddNewBlog={toggleAddNewBlog}\r\n            user={user}\r\n            blogServiceCreate={blogService.create}\r\n            blogServiceGetOne = {blogService.getOne}\r\n            username={user.username}\r\n          />\r\n        </div>\r\n        <section className='blogSection'>\r\n          <h3 className=\"font-weight-bolder\">Saved blogs:</h3>\r\n          <div className=\"line\"></div>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map(blog =>\r\n              <Blog\r\n                key={blog.id}\r\n                blog={blog}\r\n                user={user}\r\n                setBlogs={setBlogs}\r\n                blogs={blogs}\r\n                makeMessage={makeMessage}\r\n                blogServiceUpdate = {blogServiceUpdate}\r\n\r\n              />\r\n            )}\r\n        </section>\r\n      </section>\r\n      <AboutUsers stats = { stats } blogs = {blogs}  mostLikes = {mostLikes} favoriteBlog = {favoriteBlog} registeredUsers = { registeredUsers } />\r\n      <Footer/>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}