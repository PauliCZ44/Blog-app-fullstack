{"version":3,"sources":["reducers/NotificationReducer.js","components/LoginForm.js","components/RegistrationForm.js","services/blogs.js","reducers/blogReducer.js","components/BlogForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/AboutUsers.js","services/login.js","services/register.js","components/Footer.js","components/NavMenu.js","components/AllUsersDetails.js","components/SingleUserView.js","components/SingleBlogView.js","services/users.js","reducers/userReducer.js","App.js","helper/statistics.js","store.js","index.js"],"names":["timeOutID","LoginForm","props","className","type","value","username","id","placeholder","onChange","target","setUsername","password","setPassword","onClick","handleLogin","switchToRegister","initMessage","message","error","makeAndRemoveMessage","text","seconds","time","clearTimeout","dispatch","a","setTimeout","NotificationReducer","state","action","RegistrationForm","useDispatch","useState","isNotFilled","setIsNotFilled","styleFilledUser","styleFilledName","styleFilledPass","styleFilledPassConf","registerUser","e","preventDefault","name","passwordConfirm","userObject","registerService","res","setName","setPasswordConfirm","console","log","baseUrl","token","create","blogToBeSaved","config","headers","Authorization","axios","post","response","data","deleteBlog","blogToBeDeleted","url","delete","getAll","get","then","setToken","newToken","put","blogToBePutted","getOne","blogToBeFound","initialBlogs","map","blog","content","author","Math","random","toFixed","votes","sort","b","initialState","blogs","createBlog","blogService","result","likeBlog","blogToLike","blogToDelete","blogReducer","blogToAdd","title","likes","user","concat","find","filter","BlogForm","toggleAddNewBlog","setTitle","setAuthor","setUrl","styleFilledT","styleFilledA","styleFilledU","handleAddBlog","blogObject","onSubmit","htmlFor","Blog","showDetails","setShowDetails","likeIsDisabled","setLikeIsDiabled","handleDeleteBlog","window","confirm","sendPut","blogToPut","to","href","disabled","size","Notification","classStyle","screen","rMessage","useSelector","notif","rError","style","color","borderLeft","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","AboutUsers","usersToRender","registeredUsers","length","likeOfUser","reduce","accum","key","filteredUsersToRender","stats","mostLikesUser","mostLikes","mostLikesNumberOfBlogs","round","mostLikedBlogLikes","mostLikedBlogTitle","mostlikedBlogUser","mostBlogs","Author","login","credentials","register","userData","Footer","NavMenu","padding","paddingRight","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","Link","as","AllUsersDetails","u","SingleUserView","match","useRouteMatch","ur","params","blogsToRender","bl","SingleBlogView","users","loggedUser","Login","loginService","localStorage","setItem","JSON","stringify","userReducer","App","setUser","addNewVisible","setAddNewVisible","registration","setRegistration","setStats","useEffect","userService","loggedUserJSON","getItem","parse","event","mostLikesRes","Array","isArray","authorWithMostLikes","authorsAndLikes","forEach","findIndex","el","push","numberOfBlogs","index","auth","maxLikes","max","i","favoriteBlogRes","favoriteBlog","mostBlogsRes","authors","bestAuthor","maxBlogs","removeItem","exact","path","blogServiceCreate","blogServiceGetOne","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb5286a5.chunk.js","sourcesContent":["let initMessage = {\r\n  message: '',\r\n  error: false\r\n}\r\n\r\n\r\nlet timeOutID\r\n\r\nexport const displayMessage = (data, id, error) => {\r\n  console.log('DISPLAING')\r\n  return {\r\n    type: 'DISPLAY',\r\n    message: data,\r\n    error: error,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const removeMessage = (id) => {\r\n  console.log('REMOVING')\r\n  return {\r\n    type: 'REMOVE',\r\n    message: initMessage.message,\r\n    error: false,\r\n    id,\r\n  }\r\n}\r\n\r\n// 2 aboce function (actions) are used in one action creator as a series of actions, where 1 is asynchronous.\r\n// more about this at https://stackoverflow.com/questions/35411423/how-to-dispatch-a-redux-action-with-a-timeout/35415559#35415559\r\n\r\nexport const makeAndRemoveMessage = (text = '-', seconds = 3, error = false) => {\r\n  let time = seconds * 1000\r\n  clearTimeout(timeOutID) //This does the trick\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'DISPLAY',\r\n      message: text,\r\n      error: error\r\n    })\r\n    timeOutID = setTimeout(() => {\r\n      dispatch({\r\n        type: 'REMOVE',\r\n        message: initMessage.message,\r\n        error: false\r\n      })\r\n    }, time)\r\n  }\r\n}\r\n\r\n/* NOT IMPLEMENTED\r\nexport const displayAndRemove =(text = '-', seconds = 3) => {\r\n  return async (dispatch) => {\r\n  dispatch({\r\n    type: 'DISPLAYANDREMOVE',\r\n    message: text,\r\n    expire: +new Date() + seconds*1000 })\r\n  }\r\n}\r\n*/\r\n//dispatch(setNotification(`you voted '${anecdote.content}'`, 10))\r\n\r\nconst NotificationReducer = (state = initMessage, action) => {\r\n  switch (action.type) {\r\n  case 'DISPLAY': {\r\n    return { ...state,\r\n      message: action.message,\r\n      error: action.error,\r\n    }\r\n  }\r\n  case 'REMOVE': {\r\n    return { ...state,\r\n      message: action.message,\r\n      error: false\r\n    }\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default NotificationReducer\r\n","import React from 'react'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  return (\r\n    <div className=\"card px-sm-4 mt-2 login-card hv-center shadow\">\r\n      <form className=\"p-2\">\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Username</label>\r\n          <input type=\"text\"\r\n            value={props.username}\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            placeholder=\"Enter your user name\"\r\n            onChange={({ target }) => props.setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Password</label>\r\n          <input type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={props.password}\r\n            onChange={({ target }) => props.setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          id = \"login-btn\"\r\n          type=\"submit\"\r\n          className=\"btn btn-dark my-3 px-5 submitBtn\"\r\n          onClick={props.handleLogin}\r\n        >\r\n          Login\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.switchToRegister}\r\n          className=\"btn btn-info my-3 px-4 submitBtn float-right\">\r\n           Create Account\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginForm","import React,  { useState }  from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeAndRemoveMessage } from '../reducers/NotificationReducer'\r\n\r\nconst RegistrationForm = (props) => {\r\n  const dispatch = useDispatch()\r\n  /* VALIDATOIN */\r\n  const [isNotFilled, setIsNotFilled] = useState([false, false, false, false])\r\n\r\n  let styleFilledUser = isNotFilled[0]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledName = isNotFilled[1]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledPass = isNotFilled[2]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledPassConf = isNotFilled[3]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault()\r\n    if (props.username === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in your username', 5, true))\r\n      return setIsNotFilled([true, false, false, false])\r\n    }\r\n    else if (props.name === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in your full name', 5, true))\r\n      return setIsNotFilled([false, true, false, false])\r\n    }\r\n    else if (props.password === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in your full password', 5, true))\r\n      return setIsNotFilled([false, false, true, false])\r\n    }\r\n    else if (props.passwordConfirm === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in your full password  password for confirmation', 5, true))\r\n      return setIsNotFilled([false, false, false, true])\r\n    }\r\n    else if (props.passwordConfirm !== props.password) {\r\n      dispatch(makeAndRemoveMessage('Passwords had to be equal', 5, true))\r\n      return setIsNotFilled([false, false, true, true])\r\n    }\r\n    /* VALIDATOIN  END*/\r\n    const userObject = {\r\n      username: props.username,\r\n      name: props.name,\r\n      password: props.password,\r\n    }\r\n    try {\r\n      let res = await props.registerService(userObject)\r\n      if (res) {\r\n        dispatch(makeAndRemoveMessage(`${props.name}, you were registed in as \"${props.username}\"`, 5))\r\n        props.setUsername('')\r\n        props.setName('')\r\n        props.setPassword('')\r\n        props.setPasswordConfirm('')\r\n        setIsNotFilled([false, false, false, false])\r\n        console.log('response after create:', res)\r\n      }\r\n    } catch (error) {\r\n      dispatch(makeAndRemoveMessage(`${props.name}, you were registed in as \"${props.username}\"`, 5, true))\r\n      console.log('error::', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-sm-4 mt-2 login-card hv-center shadow\">\r\n      <form className=\"p-2\">\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Username for login</label>\r\n          <input type=\"text\"\r\n            value={props.username}\r\n            className={styleFilledUser}\r\n            id=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            onChange={({ target }) => props.setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-3\">\r\n          <label className=\"font-weight-bold\">Name</label>\r\n          <input type=\"text\"\r\n            value={props.name}\r\n            className={styleFilledName}\r\n            id=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={({ target }) => props.setName(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Password</label>\r\n          <input type=\"password\"\r\n            className={styleFilledPass}\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={props.password}\r\n            onChange={({ target }) => props.setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left mt-4\">\r\n          <label className=\"font-weight-bold\">Confirm your password</label>\r\n          <input type=\"password\"\r\n            className={styleFilledPassConf}\r\n            id=\"passwordConfirm\"\r\n            placeholder=\"Confirm your password\"\r\n            value={props.passwordConfirm}\r\n            onChange={({ target }) => props.setPasswordConfirm(target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-block btn-dark my-5 px-5 py-3 submitBtn\"\r\n          onClick = { registerUser } >\r\n          CREATE NEW ACCOUNT\r\n        </button>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <p className = 'my-2'> Already have an account?</p>\r\n          <button\r\n            className = \"btn btn-info my-2 px-5 save-btn\"\r\n            type = \"button\"\r\n            onClick={props.switchToRegister} >\r\n            Log in here\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default RegistrationForm","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n// eslint-disable-next-line\r\nlet token = null\r\n\r\nfunction setToken(newToken) {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (blogToBeSaved) => {\r\n  // console.log('token:', token)\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios.post(baseUrl, blogToBeSaved, config)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (blogToBeDeleted) => {\r\n  //console.log('token:', token)\r\n  const config = { headers: { Authorization: token } }\r\n  let url = baseUrl+'/'+blogToBeDeleted.id\r\n  const response = await axios.delete(url, config)\r\n  return response.data\r\n}\r\n\r\nconst put = async (blogToBePutted) => {\r\n  let url = baseUrl+'/'+blogToBePutted.id\r\n  //console.log(url)\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios.put(url, blogToBePutted, config)\r\n  console.log('Put METHDON, data:', response.data)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (blogToBeFound) => {\r\n  let url = baseUrl+'/'+blogToBeFound.id\r\n  const response = await axios.get(url)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, setToken, create, put , deleteBlog, getOne }","//ACTIONS: export const  SOMEACTION(params) => {return}\r\n// Action return type of action, and payload\r\n// Actual REDUCER\r\n// const reducer - returns state\r\nimport blogService from '../services/blogs'\r\n\r\nconst blogsAtStart = []\r\n\r\nconst getId = () => (100000 * Math.random()).toFixed(0)\r\n\r\nconst asObject = (blog) => {\r\n  return {\r\n    content: blog,\r\n    url: 'action.data.url',\r\n    author: 'action.data.author',\r\n    id: getId(),\r\n    votes: 0\r\n  }\r\n}\r\n\r\nconst initialBlogs = blogsAtStart.map(asObject).sort((a, b) => b.votes - a.votes)\r\n\r\nconst initialState = {\r\n  blogs: [...initialBlogs\r\n  ],\r\n  /*notification: {\r\n    message: '-',\r\n    error: false\r\n  },\r\n  users: [],\r\n  loggedUser: 'nameOfLoggedUser'*/\r\n}\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n\r\n  case 'INITIALIZE': {\r\n    return { ...state, blogs: [...action.blogs] }\r\n  }\r\n\r\n  case 'CREATE': {\r\n    const blogToAdd = {\r\n      title: action.data.title,\r\n      url: action.data.url,\r\n      author: action.data.author,\r\n      id: action.data.id,\r\n      likes: 0,\r\n      user: { username: action.username }\r\n    }\r\n    return { ...state, blogs: state.blogs.concat(blogToAdd) }\r\n  }\r\n\r\n  case 'LIKE': {\r\n    const blogToLike = state.blogs.find(b => b.id === action.id)\r\n    // console.log(blogToLike)\r\n    blogToLike.likes += 1\r\n    return { ...state, blogs: [...state.blogs.map(blog => blog.id === action.id ? blogToLike : blog).sort((a, b) => b.likes-a.likes)] }  // projdi state a  pokud najdes anecdote se stejným ID tak ji nahraď anecToChange jinak vlož původní anecdote\r\n    //find anecdotes by id nd increase vote by 1\r\n  }\r\n\r\n  case 'DELETE': {\r\n    console.log('DELeTE ACTION', action)\r\n    return { ...state, blogs: [...state.blogs.filter(blog => blog.id !== action.id)] }\r\n  }\r\n\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const initBlogs = () => {\r\n  return async (dispatch) =>  {\r\n    const blogs = await blogService.getAll()  //thanks to redux-thunk, function can be used in action creator as a return value of action creator\r\n    dispatch({\r\n      type: 'INITIALIZE',\r\n      blogs: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (content, username) => {\r\n  console.log('CREATE')\r\n  return async (dispatch) => {\r\n    const result = await blogService.create(content)\r\n    dispatch({\r\n      type: 'CREATE',\r\n      data: result,\r\n      username: username\r\n    })\r\n    console.log(result,'result from reducer')\r\n    return result\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogToLike) => {\r\n  console.log('LIKE BLOG ACTION')\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'LIKE',\r\n      id: blogToLike.id\r\n    })\r\n    await blogService.put(blogToLike)\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogToDelete) => {\r\n  return async (dispatch) => {\r\n    const result = await blogService.deleteBlog(blogToDelete)\r\n    dispatch({\r\n      type: 'DELETE',\r\n      id: blogToDelete.id\r\n    })\r\n    console.log(blogToDelete.id,'result from reducer deleting')\r\n    return result\r\n  }\r\n}\r\nexport default blogReducer\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeAndRemoveMessage } from '../reducers/NotificationReducer'\r\nimport { createBlog } from  '../reducers/blogReducer'\r\n\r\nconst BlogForm = ({ toggleAddNewBlog, username }) => {\r\n  const dispatch = useDispatch()\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [isNotFilled, setIsNotFilled] = useState([false, false, false])\r\n\r\n  let styleFilledT = isNotFilled[0]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledA = isNotFilled[1]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n  let styleFilledU = isNotFilled[2]\r\n    ? 'form-control notFilledForm'\r\n    : 'form-control'\r\n\r\n  const handleAddBlog = async (e) => {\r\n    e.preventDefault()\r\n    if (title === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in the Title', 4, true))\r\n      setIsNotFilled([true, false, false])\r\n      return\r\n    } else if (author === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in the Author', 4, true))\r\n      setIsNotFilled([false, true, false])\r\n      return\r\n    } else if (url === '') {\r\n      dispatch(makeAndRemoveMessage('Please fill in the URL', 4, true))\r\n      setIsNotFilled([false, false, true])\r\n      return\r\n    }\r\n\r\n    let blogObject = {\r\n      title,\r\n      author,\r\n      url,\r\n    }\r\n    //console.log(blogObject)\r\n    try {\r\n      dispatch(createBlog(blogObject, username))\r\n        .then(res => {\r\n          console.log('dispatchCreate result', res)\r\n          dispatch(makeAndRemoveMessage(`Blog \"${title}\" was added`, 4, false))\r\n          setTitle('')\r\n          setAuthor('')\r\n          setUrl('')\r\n          setIsNotFilled(false, false, false)             //reset red input fields\r\n          toggleAddNewBlog()                              //close blog form\r\n        })\r\n\r\n    } catch (error) {\r\n      dispatch(makeAndRemoveMessage('ERROR - Blog was not added', 4, true))\r\n      console.log('error::', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-3 mt-2 mb-5 addBlog-card hv-center shadow-lg addBlog-panel\">\r\n      <h3 className=\"text-center py-3\">Add blog:</h3>\r\n      <form onSubmit={handleAddBlog}>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputTitle\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold pl-sm-4\"\r\n          >\r\n            Title*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledT}\r\n              id=\"inputTitle\"\r\n              placeholder=\"Enter title\"\r\n              value={title}\r\n              onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputAuthor\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold  pl-sm-4\"\r\n          >\r\n            Author*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledA}\r\n              id=\"inputAuthor\"\r\n              placeholder=\"Enter author\"\r\n              value={author}\r\n              onChange={({ target }) => setAuthor(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label\r\n            htmlFor=\"inputURL\"\r\n            className=\"col-sm-3 col-md-2 col-form-label font-weight-bold  pl-sm-4\"\r\n          >\r\n            URL*:\r\n          </label>\r\n          <div className=\"col-sm-9 col-md-10 pr-sm-4\">\r\n            <input\r\n              type=\"text\"\r\n              className={styleFilledU}\r\n              id=\"inputURL\"\r\n              placeholder=\"Enter URL\"\r\n              value={url}\r\n              onChange={({ target }) => setUrl(target.value)}\r\n            />\r\n            <small id=\"help\" className=\"form-text text-muted\">\r\n              * must be provided\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n            <button\r\n              id = 'saveBlogBtn'\r\n              type=\"submit\"\r\n              className=\"btn btn-info px-5 save-btn mr-4 mb-2\"\r\n              onClick={handleAddBlog}\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger px-5 cancel-btn mb-2 \"\r\n              onClick={toggleAddNewBlog}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeAndRemoveMessage } from '../reducers/NotificationReducer'\r\nimport { likeBlog, deleteBlog } from '../reducers/blogReducer'\r\n//import blogService from '../services/blogs'\r\nimport PropTypes from 'prop-types'\r\n//icons\r\nimport { HandThumbsUp } from 'react-bootstrap-icons'\r\n\r\nconst Blog = ({ blog, user, likes }) => {\r\n  const dispatch = useDispatch()\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  //const [likes, setLikes] = useState(likes)\r\n  const [likeIsDisabled, setLikeIsDiabled] = useState(false)\r\n  const toggleShowDetails = () => {\r\n    setShowDetails(!showDetails)\r\n    console.log('toggle details')\r\n  }\r\n\r\n\r\n  const handleDeleteBlog = async (e) => {\r\n    console.log('deleting blog')\r\n    e.preventDefault()\r\n    let blogToDelete = blog\r\n    if (window.confirm(`Do you really want to delete \"${blogToDelete.title}\" from your phonebook?`)) {\r\n      //await blogService.deleteBlog(blogToDelete)\r\n      //setBlogs(blogs.filter(blog => blog.id !== blogToDelete.id)) //filter blogs\r\n      dispatch(deleteBlog(blogToDelete))\r\n      dispatch(makeAndRemoveMessage('Blog was deleted!', 5, false))\r\n    } else {\r\n      dispatch(makeAndRemoveMessage('Blog was NOT deleted!', 5, true))\r\n    }\r\n  }\r\n\r\n  const sendPut = async (e) => {\r\n    e.preventDefault()\r\n    //setLikeIsDiabled(true)  //this will break the test for likes\r\n    let blogToPut = {\r\n      id: blog.id,\r\n      user: blog.user,\r\n      author: blog.author,\r\n      likes: likes + 1,\r\n      title: blog.title,\r\n      url: blog.url\r\n    }\r\n    // await blogServiceUpdate(blogToPut)\r\n\r\n    dispatch(likeBlog(blogToPut))\r\n    dispatch(makeAndRemoveMessage(`You liked blog ${blog.title} by ${blog.author}`, 5, false))\r\n    console.log('like given')\r\n\r\n    setLikeIsDiabled(true)\r\n\r\n    setTimeout(() => {\r\n      setLikeIsDiabled(false)\r\n    }, 30)                           // =========  LIKE SPAM PROTECTION  ==============\r\n    //let res = await blogService.put(blogToPut)   // ->> moved to app.js\r\n  }\r\n\r\n  const details = () => (\r\n    <div className = 't_detailsDiv'>\r\n      <p className='mb-1'>URL: <a href={blog.url}>{blog.url}</a></p>\r\n      <p className='mb-1 t_likesCount'>Likes: {likes}\r\n        <button\r\n          onClick={sendPut}\r\n          className=\"btn btn-sm btn-secondary py-0 px-3 ml-4 font-weight-bold t_LikeBtn\"\r\n          disabled={likeIsDisabled}>\r\n          Like\r\n          < HandThumbsUp size={18} className='ml-1  font-weight-bold'/>\r\n        </button>\r\n      </p>\r\n      <p className='mb-1'>User: {blog.user.username}</p>\r\n      { blog.user.username === user.username || typeof blog.user  === 'string'  //pokud je přihlášený uživatel stejný jako uživatel co vytvořil blog\r\n        ? <button\r\n          className='btn btn-sm btn-danger px-2 px-sm-4 py-1 t_DelBtn'\r\n          onClick={handleDeleteBlog}>\r\n          DELETE\r\n        </button>\r\n        : <p>You can not delete this blog. This was created by {blog.user.username}</p>\r\n      }\r\n    </div>\r\n  )\r\n\r\n  let url = '/blogs/'+blog.id\r\n  return (\r\n    <div className=\"border-left border-top  bg-white rounded my-4 blogHeader\">\r\n      <div className=\"bigLeftBorder border-dark ml-0 pl-2 py-2\">\r\n        <div className='d-flex'>\r\n          <h5 className='py-1 mb-2'> <Link to = {url}>{blog.title}</Link><span className='text-muted'> by {blog.author} </span></h5>\r\n          <button\r\n            className='btn btn-sm btn-info px-2 px-sm-4 py-1 ml-auto mr-1 mr-sm-3 align-self-center t_DetailsBtn'\r\n            onClick={toggleShowDetails}>\r\n            {showDetails ? 'Hide details' :  'Show details'}\r\n          </button>\r\n        </div>\r\n\r\n        {showDetails ? details() : null}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n}\r\n\r\n/* TEST BUTTONS\r\n      <p>User</p>\r\n      <button onClick = {()=> console.log(user)}>User: </button>\r\n      <p>Blog:</p>\r\n      <button onClick = {()=> console.log(blog)}>BLOG</button>\r\n*/\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = ({ screen }) => {\r\n  const rMessage = useSelector(state => state.notif.message)\r\n  const rError = useSelector(state => state.notif.error)\r\n  const succesStyle = {\r\n    color: 'green',\r\n    borderLeft: 'solid 3px #008000bb',\r\n  }\r\n  const errorStyle = {\r\n    color: 'red',\r\n    borderLeft: 'solid 3px rgb(255, 0, 0)',\r\n  }\r\n\r\n\r\n  let classStyle\r\n  if (screen === 'login') {\r\n    classStyle = 'login-notif'\r\n  } else {\r\n    classStyle = 'add-blog-notif'\r\n  }\r\n\r\n\r\n  if (rMessage === null) {\r\n    return null\r\n  } else  {\r\n    return (\r\n      <div className= {classStyle} style={rError ? errorStyle : succesStyle } id = 'messageComp'>\r\n        {rMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility} className='btn btn-md btn-light btn-block py-2 px-3 border border-dark logout-btn'>Show {props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        <button onClick={toggleVisibility} className='btn btn-light py-2 px-3 btn-block logout-btn'>Hide {props.buttonLabel}</button>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Togglable\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\n//import ReactDOM from 'react-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport Togglable from './Togglable'\r\n\r\nconst AboutUsers = (props) => {\r\n\r\n\r\n  let usersToRender = props.registeredUsers\r\n    .sort((a, b) => b.blogs.length - a.blogs.length)\r\n    .map( user => {\r\n      let likeOfUser = user.blogs.reduce((accum, blog) => accum + blog.likes, 0)\r\n      let url = `/users/${user.id}`\r\n      return (\r\n        <p key={user.id}> <Link to={url}>{user.username }</Link> (<em>{user.blogs.length}</em> blogs; <em>{likeOfUser}</em> total likes) </p>\r\n      )\r\n    })\r\n\r\n  let filteredUsersToRender = props.registeredUsers\r\n    .filter( user => user.blogs.length !== 0)\r\n    .sort((a, b) => b.blogs.length - a.blogs.length)\r\n    .map( user => {\r\n      let likeOfUser = user.blogs.reduce((accum, blog) => accum + blog.likes, 0)\r\n      return (\r\n        <li key={user.id}> <strong>{user.username }</strong> (<em>{user.blogs.length}</em> blogs; <em>{likeOfUser}</em> total likes) </li>\r\n      )\r\n    })\r\n  //console.log('Author com, stats::', props.stats)\r\n  return (\r\n    <div className='container grid-stats-area mt-3'>\r\n      <div className=  'grid-stats-a'>\r\n        <Togglable buttonLabel=\"Info about registered users and blogs:\">\r\n          <ul className = 'mt-2'>\r\n            {usersToRender}\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n      <div className=  'grid-stats-b'>\r\n        <Togglable buttonLabel=\"Users with at least one blog:\">\r\n          <ul className = 'mt-2'>\r\n            {filteredUsersToRender}\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n      <div className=  'grid-stats-c'>\r\n        <Togglable buttonLabel=\"additional info:\">\r\n          <h5 className = 'mt-2'>Author with most likes is:</h5>\r\n          <ul>\r\n            <li><strong>{props.stats.mostLikesUser}</strong> with {props.stats.mostLikes} likes total, on his/her <em>{props.stats.mostLikesNumberOfBlogs}</em> blogs.\r\n           That is, on average { (Math.round(props.stats.mostLikedBlogLikes / props.stats.mostLikesNumberOfBlogs * 1000))/1000} likes per blog.</li>\r\n          </ul>\r\n          <h5>The most liked blog is:</h5>\r\n          <ul>\r\n            <li><strong>&quot;{props.stats.mostLikedBlogTitle}&quot;</strong> <em>by {props.stats.mostlikedBlogUser}</em> with {props.stats.mostLikedBlogLikes} likes.</li>\r\n          </ul>\r\n          <h5>Author with most blogs is:</h5>\r\n          <ul>\r\n            <li><strong>&quot;{props.stats.mostBlogs.Author}&quot;</strong> with totaly <em>{props.stats.mostBlogs.blogs}</em> blogs.\r\n           On all of his blogs he has <em>{props.stats.mostBlogs.likes}</em> likes.\r\n           That is, on average { (Math.round(props.stats.mostBlogs.likes / props.stats.mostBlogs.blogs * 1000))/1000} likes per blog.</li>\r\n          </ul>\r\n        </Togglable>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutUsers","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials)\r\n  console.log(res)\r\n  return res.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = async (userData) => {\r\n  const res = await axios.post(baseUrl, userData)\r\n  console.log(res)\r\n  return res.data\r\n}\r\n\r\nexport default { register }","import React  from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n\r\n    <footer className=\"footer-copyright page-footer align-items-center d-flex\">\r\n      <div className=\"container text-center justify-content-center\">\r\n            © 2020 Pavel Šťastný   <a id=\"info\"  className=\"footerText\" href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\">If you find a bug, please contact me.</a>\r\n        <a href=\"https://www.linkedin.com/in/pavel-stastny-155539150\" target=\"blank\" className=\"footerText right\">LinkedIn</a>\r\n        <a href=\"https://www.freecodecamp.org/paulicz44\" target=\"blank\" className=\"footerText right\">FCC profile </a>\r\n        <a href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\" target=\"blank\" className=\"footerText right\">My Github</a>\r\n        <br/>\r\n      </div>\r\n    </footer>\r\n\r\n  )\r\n}\r\nexport default Footer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n\r\nconst NavMenu = (props) => {\r\n  const padding = {\r\n    paddingRight: 30,\r\n    color: 'deepskyblue'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Navbar collapseOnSelect expand=\"sm\" bg=\"transparent\" variant=\"dark\">\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#\" as=\"span\">\r\n                <Link to=\"/users\" style={padding}>\r\n                  USERS\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link href=\"#\" as=\"span\">\r\n                <Link to=\"/blogs\" style={padding}>\r\n                    BLOGS\r\n                </Link>\r\n              </Nav.Link>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavMenu","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet AllUsersDetails = (props) => {\r\n  return(\r\n    <>\r\n      <section className='container'>\r\n        <h2 className = 'text-center'>Information about registered users</h2>\r\n        <ul className = 'mt-5'>\r\n          {props.registeredUsers.map(u => {\r\n            let url =`/users/${u.id}`\r\n            return (\r\n              <li key={u.id}> <Link  to={url}> {u.username} </Link> with {u.blogs.length} blogs </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        <h5 className = 'mt-5'>Author with most likes is:</h5>\r\n        <ul className = 'mt-3'>\r\n          <li><strong>{props.stats.mostLikesUser}</strong> with {props.stats.mostLikes} likes total, on his/her <em>{props.stats.mostLikesNumberOfBlogs}</em> blogs.\r\n           That is, on average { (Math.round(props.stats.mostLikedBlogLikes / props.stats.mostLikesNumberOfBlogs * 1000))/1000} likes per blog.</li>\r\n        </ul>\r\n        <h5 className = 'mt-5'>The most liked blog is:</h5>\r\n        <ul className = 'mt-3'>\r\n          <li><strong>&quot;{props.stats.mostLikedBlogTitle}&quot;</strong> <em>by {props.stats.mostlikedBlogUser}</em> with {props.stats.mostLikedBlogLikes} likes.</li>\r\n        </ul>\r\n        <h5 className = 'mt-5'>Author with most blogs is:</h5>\r\n        <ul className = 'mt-3'>\r\n          <li><strong>&quot;{props.stats.mostBlogs.Author}&quot;</strong> with totaly <em>{props.stats.mostBlogs.blogs}</em> blogs.\r\n           On all of his blogs he has <em>{props.stats.mostBlogs.likes}</em> likes.\r\n           That is, on average { (Math.round(props.stats.mostBlogs.likes / props.stats.mostBlogs.blogs * 1000))/1000} likes per blog.</li>\r\n        </ul>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllUsersDetails","import React from 'react'\r\nimport {\r\n  Link,\r\n  useRouteMatch\r\n} from 'react-router-dom'\r\n\r\nconst SingleUserView = (props) => {\r\n  const match = useRouteMatch('/users/:id')\r\n  console.log('match:', match)\r\n  const user = match\r\n    ? props.registeredUsers.find((ur) => ur.id === match.params.id)\r\n    : null\r\n  console.log(user)\r\n\r\n  if (!user) {\r\n    return (<div><Link to = \"/\">Bo back to main page</Link></div>)\r\n  }\r\n\r\n  let usersToRender = props.registeredUsers\r\n    .filter(u => u.id === user.id)\r\n    .map( user => {\r\n      let likeOfUser = user.blogs.reduce((accum, blog) => accum + blog.likes, 0)\r\n      let url = `/users/${user.id}`\r\n      return (\r\n        <p key={user.id} className = 'mt-2 text-center'> (<em>{user.blogs.length}</em> blogs; <em>{likeOfUser}</em> total likes) </p>\r\n      )\r\n    })\r\n\r\n  let blogsToRender = user.blogs.map(bl => {\r\n    return (\r\n      <li key = {bl.id }> <strong> {bl.title}</strong> by {bl.author} with {bl.likes} likes.</li>\r\n    )\r\n  })\r\n\r\n\r\n  return(\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className = \"text-center\">{user.username}</h3>\r\n        <div className='mt-3'>\r\n\r\n          {usersToRender}\r\n\r\n          <h5>List of blogs that was uploaded by {user.username}:</h5>\r\n          <ul>\r\n            {blogsToRender}\r\n          </ul>\r\n          <Link to = \"/users\">← Go back to page with all users</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleUserView","import React from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SingleBlogView = (props) => {\r\n\r\n  const match = useRouteMatch('/blogs/:id')\r\n  console.log('match:', match)\r\n  const blog = match\r\n    ? props.blogs.find((bl) => bl.id === match.params.id)\r\n    : null\r\n  console.log(blog)\r\n\r\n  if (!blog) {\r\n    return (<p>Error</p>)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div className=\"container\">\r\n        <h2 className=\"text-center\">{blog.title}</h2>\r\n        <div className='mt-3'>\r\n          <p>URL: {blog.url}</p>\r\n          <p>Likes: {blog.likes}</p>\r\n          <p>Aded by: {blog.user.username}</p>\r\n        </div>\r\n        <Link to = \"/blogs\">Go back to page with all blogs</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleBlogView","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst getAllUsers = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAllUsers}","import userService  from '../services/users'\r\nimport blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\n\r\nlet initialState = { users: [], loggedUser: '' }\r\n\r\nexport const initializeUsers =  () => {\r\n  return async (dispatch) =>  {\r\n    const users = await userService.getAllUsers()  //thanks to redux-thunk, function can be used in action creator as a return value of action creator\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      users: users\r\n    })\r\n  }\r\n}\r\n\r\nexport const Login =  (data) => {\r\n  return async (dispatch) => {\r\n    const loggedUser = await loginService.login({ username: data.username, password: data.password })\r\n    blogService.setToken(loggedUser.token) //setting token for user\r\n    window.localStorage.setItem(\r\n      'loggedBlogAppUser',\r\n      JSON.stringify(loggedUser)\r\n    )\r\n    dispatch ({\r\n      type: 'LOGIN',\r\n      data: loggedUser.username\r\n    })\r\n    console.log('ACTION LOGIN')\r\n  }\r\n}\r\n\r\nexport const Logout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n  }\r\n}\r\n\r\nexport const SetFromLocalStorage = (data) => {\r\n  blogService.setToken(data.token)\r\n  return {\r\n    type: 'SET_FROM_LOCAL_STORAGE',\r\n    data: data.username\r\n  }\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS': {\r\n    return { ...state, users: [...action.users] }\r\n  }\r\n  case 'LOGIN': {\r\n    return { ...state, loggedUser: action.data }\r\n  }\r\n  case 'LOGOUT': {\r\n    return { ...state, loggedUser: '' }\r\n  }\r\n  case 'SET_FROM_LOCAL_STORAGE': {\r\n    return { ...state, loggedUser: action.data }\r\n  }\r\n  default: return state\r\n  }\r\n\r\n}\r\n\r\nexport default userReducer","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { mostLikes, favoriteBlog, mostBlogs } from './helper/statistics'\r\nimport LoginForm from './components/LoginForm'\r\nimport RegistrationForm from './components/RegistrationForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport AboutUsers from './components/AboutUsers'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport registerService from './services/register'\r\nimport Footer from './components/Footer'\r\nimport NavMenu from './components/NavMenu'\r\nimport AllUsersDetails from './components/AllUsersDetails'\r\nimport SingleUserView from './components/SingleUserView'\r\nimport SingleBlogView from './components/SingleBlogView'\r\n\r\nimport {   Switch,   Route } from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeAndRemoveMessage } from './reducers/NotificationReducer'\r\nimport { initBlogs } from './reducers/blogReducer'\r\nimport { initializeUsers, Login, Logout, SetFromLocalStorage } from './reducers/userReducer'\r\n\r\n\r\n//import userService from '../services/users'\r\n\r\nimport './App.css'\r\n//import login from './services/login'\r\n\r\nconst App = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState('') //states for user management\r\n\r\n  const [user, setUser] = useState(null)\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirm, setPasswordConfirm] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [addNewVisible, setAddNewVisible] = useState(false)\r\n  const [registration, setRegistration] = useState(false)\r\n\r\n  //const [registeredUsers, setRegisteredUsers] = useState([])\r\n\r\n  const [stats, setStats] = useState({\r\n    mostLikes: 0,\r\n    mostLikesUser: '',\r\n    mostLikedBlogTitle: '',\r\n    mostlikedBlogUser: '',\r\n    mostLikedBlogLikes: 0,\r\n    mostBlogs: '',\r\n    mostLikesNumberOfBlogs: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(initBlogs())\r\n    dispatch(initializeUsers())\r\n    console.log('blog and users should init')\r\n  }, [dispatch])\r\n\r\n  let blogs = useSelector(state => {\r\n    return state.blogs.blogs\r\n  })\r\n\r\n  /*useEffect(() => {\r\n    //blogService.getAll().then((blogs) => setBlogs(blogs))\r\n    //userService.getAllUsers().then((users) => setRegisteredUsers(users))\r\n    //this effect should be replaced with useSelector\r\n  }, [])*/\r\n\r\n  let registeredUsers = useSelector(state => {\r\n    return state.users.users\r\n  })\r\n\r\n  console.log('rUsers', registeredUsers)\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      // console.log('Local storage', user.token)\r\n      dispatch(SetFromLocalStorage(user))\r\n      setUser(user)\r\n    } else {\r\n      console.log('Local storage empty, you have to login to app')\r\n    }\r\n  }, [dispatch])\r\n\r\n  const toggleAddNewBlog = () => {\r\n    setAddNewVisible(!addNewVisible)\r\n    //console.log(addNewVisible)\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const hideWhenVisible = { display: addNewVisible ? 'none' : '' }\r\n  const showWhenVisible = { display: addNewVisible ? '' : 'none' }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const loggedUser = await loginService.login({ username, password })\r\n      //blogService.setToken(loggedUser.token) //setting token for user\r\n      setUser(loggedUser)\r\n      dispatch(Login({ username, password }))\r\n      setUsername('')\r\n      setPassword('')\r\n      dispatch(makeAndRemoveMessage('You were logged in', 5))\r\n      /*window.localStorage.setItem(\r\n        'loggedBlogAppUser',\r\n        JSON.stringify(loggedUser)\r\n      )*/\r\n\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      dispatch(makeAndRemoveMessage('Wrong credentials', 5, true))\r\n    }\r\n  }\r\n\r\n  const switchToRegister = (event) => {\r\n    event.preventDefault()\r\n    setPassword('')\r\n    setRegistration(!registration)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    console.log('logging out')\r\n    dispatch(Logout())\r\n    setUser(null)\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch(makeAndRemoveMessage('You were logged out', 5, true))\r\n\r\n  }\r\n\r\n  /*\r\n  const blogServiceUpdate = (blog) => {\r\n    blogService\r\n      .put(blog)\r\n      .then(() => {\r\n        console.log('blog liked')\r\n        //makeMessage(`you liked \"${blog.title}\" by ${blog.author}`) -- moved to blog.js\r\n      })\r\n      .catch((err) => {\r\n        dispatch(makeAndRemoveMessage('error updating likes', 5, true))\r\n        console.error(err)\r\n      })\r\n  }*/\r\n\r\n  /*============= STATISTICS  =============*/\r\n\r\n  useEffect(() => {\r\n    let mostLikesRes = mostLikes(blogs)\r\n    let favoriteBlogRes = favoriteBlog(blogs)\r\n    let mostBlogsRes = mostBlogs(blogs)\r\n    setStats({\r\n      mostLikes: mostLikesRes.likes,\r\n      mostLikesUser: mostLikesRes.Author,\r\n      mostLikesNumberOfBlogs: mostLikesRes.numberOfBlogs,\r\n      mostLikedBlogTitle: favoriteBlogRes.title,\r\n      mostlikedBlogUser: favoriteBlogRes.author,\r\n      mostLikedBlogLikes: favoriteBlogRes.likes,\r\n      mostBlogs: mostBlogsRes,\r\n    })\r\n  }, [blogs])\r\n\r\n  /*let testVar = mostLikes([])\r\n  console.log('test var',testVar)\r\n  let testVar2 = mostLikes({})\r\n  console.log('test var2',testVar2)*/\r\n\r\n  /*============ STATISTICS END =============*/\r\n\r\n  // LOGIN CASE //\r\n  if (user === null && registration === false) {\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <h1 className='text-center my-5'>BLOGS APP</h1>\r\n          <h5 className='text-center m-4'>Log in to application please</h5>\r\n          <div className='wrapNotif'>\r\n            <Notification\r\n\r\n              screen={'login'}\r\n            />\r\n          </div>\r\n          <LoginForm\r\n            handleLogin={handleLogin}\r\n            username={username}\r\n            setUsername={setUsername}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            switchToRegister={switchToRegister}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // REGISTRTION CASE //\r\n  if (user === null && registration === true) {\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <h1 className='text-center my-5'>BLOGS APP</h1>\r\n          <h5 className='text-center m-4'>Register to application</h5>\r\n          <div className='wrapNotif'>\r\n            <Notification\r\n\r\n              screen={'login'}\r\n            />\r\n          </div>\r\n          <RegistrationForm\r\n            username={username}\r\n            setUsername={setUsername}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            passwordConfirm={passwordConfirm}\r\n            setName={setName}\r\n            name={name}\r\n            setPasswordConfirm={setPasswordConfirm}\r\n            switchToRegister={switchToRegister}\r\n            registerService={registerService.register}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // MAIN APP SCREEN\r\n  return (\r\n    <>\r\n      <main className = \"main-app\">\r\n        <header className='bg-black pt-5 pb-2 mb-5'>\r\n          <h1 className='text-center text-light'>BLOGS APP</h1>\r\n          <div className='container'>\r\n            <p className='text-right text-white-50'>\r\n            Logged as {user.username}. Welcome back!\r\n              <button\r\n                onClick={handleLogout}\r\n                className='btn btn-dark btn-sm px-4 ml-4 logout-btn'\r\n              >\r\n              Log Out\r\n              </button>\r\n            </p>\r\n            <NavMenu/>\r\n          </div>\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/users\">\r\n            <AllUsersDetails\r\n              stats={stats}\r\n              blogs={blogs}\r\n              registeredUsers={registeredUsers}/>\r\n          </Route>\r\n          <Route path='/users/:id'>\r\n            <SingleUserView\r\n              user={user}\r\n              stats={stats}\r\n              blogs={blogs}\r\n              registeredUsers={registeredUsers}/>\r\n          </Route>\r\n          <Route path='/blogs/:id'>\r\n            <SingleBlogView\r\n              user={user}\r\n              stats={stats}\r\n              blogs={blogs}\r\n              registeredUsers={registeredUsers}/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <section className='container appWrapper'>\r\n              <div className='wrapNotif'>\r\n                <Notification\r\n\r\n                  screen={'blogList'}\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={toggleAddNewBlog}\r\n                className='btn btn-block btn-dark addBlog-card p-3 my-3 mb-5 addBlog-Btn'\r\n              /*</div>{/* style={hideWhenVisible}}*/\r\n              >\r\n          CREATE A NEW BLOG\r\n              </button>\r\n              <div style={showWhenVisible}>\r\n                <BlogForm\r\n                //setBlogs={setBlogs}\r\n                  blogs={blogs}\r\n                  toggleAddNewBlog={toggleAddNewBlog}\r\n                  user={user}\r\n                  blogServiceCreate={blogService.create}\r\n                  blogServiceGetOne={blogService.getOne}\r\n                  username={user.username}\r\n                />\r\n              </div>\r\n              <section className='blogSection'>\r\n                <h3 className='font-weight-bolder'>Saved blogs:</h3>\r\n                <div className='line'></div>\r\n                {blogs\r\n                  .sort((a, b) => b.likes - a.likes)\r\n                  .map((blog) => (\r\n                    <Blog\r\n                      key={blog.id}\r\n                      blog={blog}\r\n                      user={user}\r\n                      likes={blog.likes}\r\n                    />\r\n                  ))}\r\n              </section>\r\n            </section>\r\n            <AboutUsers\r\n              stats={stats}\r\n              blogs={blogs}\r\n              registeredUsers={registeredUsers}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/*============= STATISTICS FUNCTIONS =============*/\r\n\r\nexport const mostLikes = (blogs) => {\r\n  if (!Array.isArray(blogs) || blogs.length === 0) {\r\n    return { Author: 'none', numberOfBlogs: 0, likes: 0 }\r\n  } else {\r\n    let authorWithMostLikes = {}\r\n    let authorsAndLikes = []\r\n    blogs.forEach((blog) => {\r\n      //make array of authors and number of blogs\r\n      if (authorsAndLikes.findIndex((el) => el.Author === blog.author) === -1) {\r\n        //if author is not found, push it to the array\r\n        authorsAndLikes.push({\r\n          Author: blog.author,\r\n          likes: blog.likes,\r\n          numberOfBlogs: 1,\r\n        })\r\n      } else {\r\n        // increase number of blogs\r\n        let index = authorsAndLikes.findIndex(\r\n          (auth) => auth.Author === blog.author\r\n        )\r\n        authorsAndLikes[index].likes += blog.likes\r\n        authorsAndLikes[index].numberOfBlogs++\r\n      }\r\n    })\r\n    let maxLikes = Math.max(...authorsAndLikes.map((b) => b.likes), 0) //find max number of blogs\r\n    authorsAndLikes.forEach(() => {\r\n      let i = authorsAndLikes.findIndex((el) => el.likes === maxLikes)\r\n      if (i > -1) {\r\n        authorWithMostLikes = authorsAndLikes[i]\r\n      }\r\n    })\r\n    //console.log('bestOne:', authorWithMostLikes)\r\n    return authorWithMostLikes\r\n  }\r\n}\r\n\r\nexport const favoriteBlog = (blogs) => {\r\n  let result = {\r\n    title: '',\r\n    author: '',\r\n    likes: 0,\r\n  }\r\n  if (!Array.isArray(blogs) || blogs.length === 0) {\r\n    return result\r\n  } else {\r\n    blogs.forEach((blog) => {\r\n      if (blog.likes > result.likes) {\r\n        result = {\r\n          title: blog.title,\r\n          author: blog.author,\r\n          likes: blog.likes,\r\n        }\r\n      }\r\n    })\r\n    return result\r\n  }\r\n}\r\n\r\nexport const mostBlogs = (blogs) => {\r\n  if (!Array.isArray(blogs) || blogs.length === 0) {\r\n    return { Author: 'none', blogs: 0, likes: 0 }\r\n  } else {\r\n    // vytvořit array of objects s autory a počtem blogů\r\n    let authors = []\r\n    let bestAuthor = {}\r\n\r\n    blogs.forEach((blog) => {\r\n      //make array of authors and number of blogs\r\n      if (authors.findIndex((el) => el.Author === blog.author) === -1) {\r\n        //if author is not found, push it to the array\r\n        authors.push({ Author: blog.author, blogs: 1, likes: blog.likes })\r\n      } else {\r\n        // increase number of blogs\r\n        let index = authors.findIndex((auth) => auth.Author === blog.author)\r\n        authors[index].blogs++\r\n        authors[index].likes += blog.likes\r\n      }\r\n    })\r\n    let maxBlogs = Math.max(...authors.map((b) => b.blogs), 0) //find max number of blogs\r\n    authors.forEach(() => {\r\n      let i = authors.findIndex((el) => el.blogs === maxBlogs)\r\n      if (i > -1) {\r\n        bestAuthor = authors[i]\r\n      }\r\n    })\r\n    //console.log('BestAUth', bestAuthor)\r\n    return bestAuthor\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport NotificationReducer from './reducers/NotificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notif: NotificationReducer, //in Notification component, we need to use \"useSelector(state => state.messages)\" to get this state\r\n  users: userReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { BrowserRouter as Router, } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store = {store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root'))"],"sourceRoot":""}